use std::env;
use std::path::PathBuf;

use cbindgen::Config;

fn main() {
    let package_name = env::var("CARGO_PKG_NAME").unwrap();
    let output_file = PathBuf::from(&format!("target/{package_name}.h"));

    let mut config = Config::default();
    config.language = cbindgen::Language::C;
    config.cpp_compat = true;
    config.pragma_once = true;
    config.autogen_warning = Some(String::from(
        "/**
 * Warning, this file is autogenerated by cbindgen. Don't modify this manually.
 * Instead, alter build.rs, or the respective rust item.
 **/",
    ));
    config.after_includes = Some(
        "#define EM_DECLARE_MODULE(ty, ...) Mod declare_module() { return (Mod){ty ## Listener, {__VA_ARGS__}}; }".to_string(),
    );

    cbindgen::generate_with_config(".", config)
        .unwrap()
        .write_to_file(output_file);
}
