use std::env;
use std::path::PathBuf;

use cbindgen::{Config, Language};

fn main() -> anyhow::Result<()> {
    let package_name = env::var("CARGO_PKG_NAME")?;
    let output_file = PathBuf::from(&format!("target/{package_name}.h"));

    let mut config = Config::default();
    config.language = Language::C;
    config.cpp_compat = true;
    config.pragma_once = true;
    config.autogen_warning = Some(String::from(
        "/**
 * Warning, this file is autogenerated by cbindgen. Don't modify this manually.
 * Instead, alter build.rs, or the respective rust item.
 **/",
    ));
    config.after_includes = Some(
        "\n#define EM_DECLARE_MODULE(ty, ...) Mod declare_module() { return (Mod){ty ## Listener, {__VA_ARGS__}}; }\n".to_owned(),
    );

    cbindgen::generate_with_config(".", config)?.write_to_file(output_file);

    Ok(())
}
